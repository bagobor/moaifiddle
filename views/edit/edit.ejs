<!DOCTYPE html>
<html>
<head>
    <link rel='stylesheet' href='/stylesheets/style.css' />
    <link rel='stylesheet' href='/vendor/terminal/jquery.terminal.css' />
    <script src="/vendor/jquery-ui/js/jquery-1.10.2.js"></script>
    <script src="/vendor/ace/ace.js" type="text/javascript" charset="utf-8"></script>
    <script src="/vendor/terminal/jquery.terminal-0.8.7.min.js"></script>

</head>
<body>

<div id="editorContainer"></div>

<script id="editorTemplate" type="text/ractive">
    <div id="editorNav">
        <ul class="buttons">
            <li><a on-click="play">Play</a></li>
            <li><a on-click="save">Save</a></li>
        </ul>
    </div>
    <div class="cols" on-mousemove="splitter-move" on-mouseup="splitter-end-move" style="left: {{ filelist.visible ? 209 : 9}}px">
       <div class="resizable code-wrapper" style='width: {{ splitter.location }}%'>
       <form id="runForm" method="post" action="/run" target="result">
            <input type="hidden" value="<%= fiddle.slug || "" %>" name="slug">
            <input type="hidden" value="<%= fiddle.revision || "" %>" name="revision">
            <input type="hidden" value="" name="fiddle" id="fiddletext">
            <div id="editor"><%= fiddle.fiddle || "" %></div>
        </form>
        </div>
        <div class="splitter-vertical" style="left: {{splitter.location}}%" on-mousedown="splitter-begin-move" data-splitter="splitter"   ></div>
        <div class="resizable player-wrapper" style='width: {{ 100 - splitter.location }}%'>
        <div class="result-container">
        <div id="player-container" on-mousemove="splitter-move" on-mouseup="splitter-end-move">
            <iframe name="result" id="result" src="/run" style='pointer-events: {{ currentSplitter.dragging ? "none" : "auto" }}; height: {{hsplitter.location}}% ' >
            </iframe>
            <div class="splitter-horizontal" style="top: {{hsplitter.location}}%" on-mousedown="splitter-begin-move" data-splitter="hsplitter"></div>
            <div id="player-console" style="height: {{100 - hsplitter.location }}%"></div>
        </div>


           </div>
        </div>
    </div>
</script>

<script type="text/javascript" src="/moaijs/moaijs.js"></script>
<script src="/vendor/ractive.js"></script>

<script type="text/javascript">
    var ractive = new Ractive({
        el: 'editorContainer',
        template: '#editorTemplate',
        data: {
            filelist: {
                visible: true,
                width: 209
            },
            hsplitter: {
                location: 50,
                direction: "h"
            },
            splitter: {
                location: 50,
                direction: "v"
            },
            currentSplitter: {}
        },
        complete: function() {
            //bind some vars
            this.slug = $('#runForm').find('input[name="slug"]').val();

            var editor = ace.edit("editor");
            editor.setTheme("ace/theme/monokai");
            var session = editor.getSession();
            editor.setShowPrintMargin(false);
            session.setMode("ace/mode/lua");
            session.setUseWrapMode(true);
            this.editor = editor;

            this.console = $('#player-console').terminal(function(command, term) {
                this.fire('terminal-input',command,term);
            }.bind(this),
                    {
                        greetings: 'MoaiJS Player v1.01',
                        name: 'fiddle_console',

                        prompt: 'js> '});

            this.console.disable(); //it grabs focus
            this.editor.focus();
        }
    });
    ractive.on("terminal-input",
            function(command, term) {
                window.frames['result'].sendCommand(command);

            }
    );
    ractive.on("splitter-begin-move", function(event) {
         this.set('currentSplitter.name', event.node.getAttribute( 'data-splitter' ));
        this.set('currentSplitter.container', $(event.node).parent() );
        this.set('currentSplitter.dragging',true);
        $('body').css({ '-webkit-user-select': 'none',
                        '-moz-user-select': '-moz-none',
                        '-ms-user-select': 'none',
                        'user-select': 'none'
        } )
    });

    ractive.on("splitter-end-move", function(event) {
        this.set('currentSplitter.dragging', false);
        $('body').css({ '-webkit-user-select': 'initial',
            '-moz-user-select': 'initial',
            '-ms-user-select': 'initial',
            'user-select': 'initial'
        } )
    });

    ractive.on("play", function(event) {
        var fiddle = this.editor.getSession().getValue();
        $(this.el).find('#fiddletext').val(fiddle);
        $(this.el).find('#runForm').first().submit();

    });
    ractive.on("splitter-move", function(event) {
        if (!this.get('currentSplitter.dragging')) return;
        var splitter = this.get('currentSplitter.name');
        var container = this.get('currentSplitter.container');
        var offsetTop = container.offset().top;
        var offsetLeft = container.offset().left;

        if (this.get(splitter+'.direction') == "v") {
            this.set(splitter+'.location',((event.original.pageX - offsetLeft) /container.outerWidth()) *100);
        } else {
            this.set(splitter+'.location',((event.original.pageY - offsetTop ) /container.outerHeight()) *100);
        }
    });

    ractive.on("save", function() {
        var fiddle = this.editor.getSession().getValue();
        var slug = this.slug;
        $.post('/'+slug,{fiddle:fiddle})
                .done(function(data) {
                    var newLoc = "/";
                    if (data.slug) {
                        newLoc = newLoc + encodeURIComponent(data.slug);

                        if (data.revision && data.revision > 1) {
                            newLoc = newLoc + "/" + encodeURIComponent(data.revision);
                        }
                    }
                    window.location.pathname = newLoc;
                });
    });


function consoleWrite(x) {
    ractive.console.echo(x);
}

function consoleError(x) {
    ractive.console.error(x);
}


</script>


</body>
</html>